import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c as r,a as e,b as a,d as t,e as s}from"./app-57ce4de4.js";const o={},c=e("h1",{id:"_4-如何配置消息的过滤与转换",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-如何配置消息的过滤与转换","aria-hidden":"true"},"#"),a(" 4 如何配置消息的过滤与转换")],-1),u=e("blockquote",null,[e("p",null,"QLExpress相关说明")],-1),h={href:"https://www.hutool.cn/docs",target:"_blank",rel:"noopener noreferrer"},m=e("li",null,[a("向上下文添加变量 contextPut(key, value) "),e("ul",null,[e("li",null,"添加后在前置操作、过滤、后置操作中均可直接通过key访问（注意顺序）")])],-1),v=e("li",null,[a("发送弹幕 sendDanmu(taskId, danmu) "),e("ul",null,[e("li",null,"别名：发送弹幕(taskId, danmu)"),e("li",null,"任务必须正在运行中，弹幕内容String")])],-1),_=e("li",null,"获取任务详情 getTask(taskId)",-1),b=e("blockquote",null,[e("p",null,[a("消息封装类"),e("code",null,"BarrageFlyMsgDTO"),a("简介")])],-1),p=e("thead",null,[e("tr",null,[e("th",null,"变量名称"),e("th",null,"含义"),e("th",null,"类型"),e("th",null,"备注")])],-1),g=e("tr",null,[e("td",null,"platform"),e("td",null,"消息所属平台"),e("td",null,"String"),e("td",null,"BILIBILI/DOUYU/HUYA/DOUYIN/KUAISHOU")],-1),x=e("tr",null,[e("td",null,"roomId"),e("td",null,"消息所属直播间房间号"),e("td",null,"String"),e("td")],-1),f=e("td",null,"type",-1),k=e("td",null,"框架定义的消息类型，提供了一些通用的属性",-1),q=e("td",null,"String",-1),U={href:"https://github.com/OrdinaryRoad-Project/ordinaryroad-live-chat-client/tree/main/live-chat-client-commons/live-chat-client-commons-base/src/main/java/tech/ordinaryroad/live/chat/client/commons/base/msg",target:"_blank",rel:"noopener noreferrer"},I=e("td",null,"msg",-1),O=e("td",null,"收到的原始消息，不同平台不同消息类型字段不同",-1),y=e("td",null,"IMsg",-1),T={href:"https://github.com/OrdinaryRoad-Project/ordinaryroad-live-chat-client",target:"_blank",rel:"noopener noreferrer"},N=s(`<h2 id="_4-1-前置操作" tabindex="-1"><a class="header-anchor" href="#_4-1-前置操作" aria-hidden="true">#</a> 4.1 前置操作</h2><h3 id="_4-1-1-方法参数" tabindex="-1"><a class="header-anchor" href="#_4-1-1-方法参数" aria-hidden="true">#</a> 4.1.1 方法参数</h3><p>msg: <code>BarrageFlyMsgDTO</code>，框架对消息的简单封装</p><h3 id="_4-1-2-方法返回值" tabindex="-1"><a class="header-anchor" href="#_4-1-2-方法返回值" aria-hidden="true">#</a> 4.1.2 方法返回值</h3><p><code>Object?</code>，为空默认返回入参<code>msg</code></p><h2 id="_4-2-过滤" tabindex="-1"><a class="header-anchor" href="#_4-2-过滤" aria-hidden="true">#</a> 4.2 过滤</h2><h3 id="_4-2-1-方法参数" tabindex="-1"><a class="header-anchor" href="#_4-2-1-方法参数" aria-hidden="true">#</a> 4.2.1 方法参数</h3><p>msg: <code>Object</code>，前置操作的返回值</p><h3 id="_4-2-2-方法返回值" tabindex="-1"><a class="header-anchor" href="#_4-2-2-方法返回值" aria-hidden="true">#</a> 4.2.2 方法返回值</h3><p><code>Boolean</code>，<code>false</code>表示丢弃此消息；<code>true</code>表示需要该消息，并继续进行后置处理</p><h2 id="_4-3-后置操作" tabindex="-1"><a class="header-anchor" href="#_4-3-后置操作" aria-hidden="true">#</a> 4.3 后置操作</h2><h3 id="_4-3-1-方法参数" tabindex="-1"><a class="header-anchor" href="#_4-3-1-方法参数" aria-hidden="true">#</a> 4.3.1 方法参数</h3><p>msg: <code>Object</code>，前置处理的返回值</p><h3 id="_4-3-2-方法返回值" tabindex="-1"><a class="header-anchor" href="#_4-3-2-方法返回值" aria-hidden="true">#</a> 4.3.2 方法返回值</h3><p><code>Object?</code>，Client最终将会收到的消息，为空默认返回入参<code>msg</code></p><h2 id="_4-4-一些例子" tabindex="-1"><a class="header-anchor" href="#_4-4-一些例子" aria-hidden="true">#</a> 4.4 一些例子</h2><h3 id="_4-4-1-消息过滤" tabindex="-1"><a class="header-anchor" href="#_4-4-1-消息过滤" aria-hidden="true">#</a> 4.4.1 消息过滤</h3><h4 id="只接收框架定义的消息" tabindex="-1"><a class="header-anchor" href="#只接收框架定义的消息" aria-hidden="true">#</a> 只接收框架定义的消息</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>return msg.type != null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="只接收弹幕和礼物消息" tabindex="-1"><a class="header-anchor" href="#只接收弹幕和礼物消息" aria-hidden="true">#</a> 只接收弹幕和礼物消息</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>return NewList(&quot;DANMU&quot;, &quot;GIFT&quot;).contains(msg.type);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-4-2-消息扩展" tabindex="-1"><a class="header-anchor" href="#_4-4-2-消息扩展" aria-hidden="true">#</a> 4.4.2 消息扩展</h3><h4 id="封装msg-增加随机数" tabindex="-1"><a class="header-anchor" href="#封装msg-增加随机数" aria-hidden="true">#</a> 封装msg，增加随机数</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import cn.hutool.core.util.RandomUtil;

map = new HashMap(2);
map.put(&quot;originalMsg&quot;,msg);
map.put(&quot;randomNumber&quot;,RandomUtil.randomNumbers(6));
return map;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通过内置方法获取某个任务的信息-并扩充到msg中" tabindex="-1"><a class="header-anchor" href="#通过内置方法获取某个任务的信息-并扩充到msg中" aria-hidden="true">#</a> 通过内置方法获取某个任务的信息，并扩充到msg中</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import cn.hutool.core.bean.BeanUtil;

map = BeanUtil.beanToMap(msg, false, false);
map.put(&quot;task&quot;,getTask(&quot;taskId&quot;));

return map;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通过http请求获取某个任务的信息-并扩充到msg中" tabindex="-1"><a class="header-anchor" href="#通过http请求获取某个任务的信息-并扩充到msg中" aria-hidden="true">#</a> 通过Http请求获取某个任务的信息，并扩充到msg中</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import cn.hutool.http.HttpUtil;
import cn.hutool.core.bean.BeanUtil;

task = HttpUtil.createGet(&quot;http://localhost:8080/task?id=1701211747748265984&quot;).execute().body();
map = BeanUtil.beanToMap(msg, false, false);
map.put(&quot;task&quot;,task);
return map;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-3-触发其他动作" tabindex="-1"><a class="header-anchor" href="#_4-4-3-触发其他动作" aria-hidden="true">#</a> 4.4.3 触发其他动作</h3><h4 id="收到消息后发送弹幕" tabindex="-1"><a class="header-anchor" href="#收到消息后发送弹幕" aria-hidden="true">#</a> 收到消息后发送弹幕</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import cn.hutool.core.util.RandomUtil;

/**随机发送弹幕**/
if RandomUtil.randomInt(0,10) &gt; 6
then
   发送弹幕(&quot;u2&quot;,&quot;666666&quot;+RandomUtil.randomNumbers(1));

return msg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31);function B(S,M){const n=i("ExternalLinkIcon");return l(),r("div",null,[c,u,e("ul",null,[e("li",null,[a("支持的方法 "),e("ul",null,[e("li",null,[a("各种静态方法一般都可以用（需要先import） "),e("ul",null,[e("li",null,[e("a",h,[a("Hutool"),t(n)])])])]),m,v,_])])]),b,e("table",null,[p,e("tbody",null,[g,x,e("tr",null,[f,k,q,e("td",null,[a("DANMU/GIFT/SUPER_CHAT/ENTER_ROOM/LIKE/LIVE_STATUS_CHANGE/ROOM_STATS/SOCIAL, "),e("a",U,[a("📌"),t(n)])])]),e("tr",null,[I,O,y,e("td",null,[e("a",T,[a("ordinaryroad-live-chat-client"),t(n)])])])])]),N])}const A=d(o,[["render",B],["__file","msgflow.html.vue"]]);export{A as default};
